## 一、通信机制
ROS的话题是ROS的一种通信机制
特点是一对多、异步
![](https://cdn.nlark.com/yuque/0/2022/jpeg/8427069/1654413800617-f67f2ebd-bd54-4157-aaf4-9ed1264bea3c.jpeg)
Topic命令行指令
rostopic echo ：打印话题信息
rostopic hz ：话题频率
rostopic info ：话题信息
rostopic list ：列举话题
rostopic pub ：往话题输入信息
rostopic bw ：话题带宽
rostopic find ：从数据类型寻找话题
rostopic type ：查看话题的数据类型
## 二、发布话题

1. 创建一个发布者
1. 创建消息数据
1. 消息赋值
1. 发布

ros::Publisher pub = nh.advertise<std_msgs::String>("topic_name", queue size);
std_msgs::String str;
str.data = "hello world";
pub.publish(str);
## 三、订阅话题

1. 创建一个订阅者
1. 创建一个回调函数

void callback(const std_msgs::StringConstPtr& str)
{
...
}
ros::Subscriber sub = nh.subscribe("my_topic", queue size, callback);
## 四、自定义消息类型
\![image.png](https://cdn.nlark.com/yuque/0/2022/png/8427069/1654421645337-15a1a6d2-4b69-4430-94ae-702cee9ab687.png#clientId=u374e74e8-3a08-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=282&id=u31d16502&margin=%5Bobject%20Object%5D&name=image.png&originHeight=352&originWidth=1468&originalType=binary&ratio=1&rotation=0&showTitle=false&size=66256&status=done&style=none&taskId=u52ef45e8-00be-4c44-bfdf-293ab4e9c46&title=&width=1174.4)
![image.png](https://cdn.nlark.com/yuque/0/2022/png/8427069/1654421667857-f1e35282-57b6-4183-994a-8ddfa7006fc9.png#clientId=u374e74e8-3a08-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=416&id=u05519ae8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=520&originWidth=1540&originalType=binary&ratio=1&rotation=0&showTitle=false&size=123845&status=done&style=none&taskId=uec6c40d5-bd26-47b2-983f-4934b141278&title=&width=1232)

